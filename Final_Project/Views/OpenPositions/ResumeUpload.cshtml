@model Final_Project_Data.Application

@{
    ViewBag.Title = "Resume Upload";
}

<h2>You currently have no resume please upload one</h2>
@if (ViewBag.Error != null)
{
    <h1><strong>@ViewBag.Error</strong></h1>
}

@using (Html.BeginForm("ResumeUpload","OpenPositions",FormMethod.Post, new {enctype= "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ApplicationId)
        @Html.HiddenFor(model => model.OpenPositionId)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.ApplicationDate)
        @Html.HiddenFor(model => model.ManagerNotes)
        @Html.HiddenFor(model => model.ApplicationStatusId)
        @Html.HiddenFor(model => model.ResumeFilename)

        @*<div class="form-group">
            @Html.LabelFor(model => model.OpenPositionId, "OpenPositionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OpenPositionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OpenPositionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationStatusId, "ApplicationStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ApplicationStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApplicationStatusId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ResumeFilename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ResumeFilename, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ResumeFilename, "", new { @class = "text-danger" })*@
                <input type="file" name="resume"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
