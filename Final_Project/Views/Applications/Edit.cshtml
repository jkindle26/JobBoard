@model Final_Project_Data.Application
@using Microsoft.AspNet.Identity
@using Final_Project_Data
<section class="masthead team" style="padding:10rem 5rem ;">



    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal text-white">
            <h4>Application Edit</h4>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ApplicationId)
            @Html.HiddenFor(model => model.OpenPositionId)

            @*<div class="form-group">
                    @Html.LabelFor(model => model.OpenPositionId, "OpenPositionId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OpenPositionId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OpenPositionId, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })*@
                        @{
                            JobBoardEntities db = new JobBoardEntities();
                            <select name="UserId" class="form-control">
                                @foreach (var item in db.UserDetails)
                                {
                                    <option value="@item.UserId">@item.FirstName @item.LastName</option>
                                }
                            </select>
                        }

                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else if (User.IsInRole("Employee"))
            {
                var userId = User.Identity.GetUserId();
                var user = new JobBoardEntities().UserDetails.Where(x => x.UserId == userId).FirstOrDefault();
                @Html.Hidden("UserId", user.UserId)
            }


            <div class="form-group">
                @Html.LabelFor(model => model.ApplicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApplicationDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ManagerNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ManagerNotes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ManagerNotes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApplicationStatus, "Application Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("ApplicationStatus", null, htmlAttributes: new { @class = "form-control" })*@
                    <select name="ApplicationStatusId">
                        <option value="1">Pending</option>
                        <option value="2">Denied</option>
                        <option value="3">Reviewed</option>
                        <option value="4">Approved</option>
                    </select>
                    @*@Html.ValidationMessageFor(model => model.ApplicationStatus, "", new { @class = "text-danger" })*@
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ResumeFilename, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ResumeFilename, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ResumeFilename, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary js-scroll-trigger" />
                </div>
            </div>
        </div>
    }
    </section>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
